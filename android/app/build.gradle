def localProperties = new Properties()
def localPropertiesFile = rootProject.file('local.properties')
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader('UTF-8') { reader ->
        localProperties.load(reader)
    }
}

def flutterRoot = localProperties.getProperty('flutter.sdk')
if (flutterRoot == null) {
    throw new GradleException("Flutter SDK not found. Define location with flutter.sdk in the local.properties file.")
}

def flutterVersionCode = localProperties.getProperty('flutter.versionCode')
if (flutterVersionCode == null) {
    flutterVersionCode = '1'
}

def flutterVersionName = localProperties.getProperty('flutter.versionName')
if (flutterVersionName == null) {
    flutterVersionName = '1.0'
}

apply plugin: 'com.android.application'
apply plugin: 'com.google.firebase.crashlytics'
apply plugin: 'com.google.gms.google-services'

//apply plugin: 'kotlin-android'
apply from: "$flutterRoot/packages/flutter_tools/gradle/flutter.gradle"
def keystoreProperties = new Properties()
def keystorePropertiesFile = rootProject.file('key.properties')
if (keystorePropertiesFile.exists()) {
    keystoreProperties.load(new FileInputStream(keystorePropertiesFile))
}


android {
    compileSdkVersion 29

    lintOptions {
        disable 'InvalidPackage'
    }

    defaultConfig {
        // TODO: Specify your own unique Application ID (https://developer.android.com/studio/build/application-id.html).
        applicationId "com.marveltech.ewarrenty"
        minSdkVersion 19
        targetSdkVersion 29
        versionCode flutterVersionCode.toInteger()
        versionName flutterVersionName
        multiDexEnabled true
    }
    signingConfigs {
        release {
            keyAlias keystoreProperties['keyAlias']
            keyPassword keystoreProperties['keyPassword']
            storeFile keystoreProperties['storeFile'] ? file(keystoreProperties['storeFile']) : null
            storePassword keystoreProperties['storePassword']

        }
    }

    buildTypes {
//        debug {
//            minifyEnabled true
//            firebaseCrashlytics {
//                // If you don't need crash reporting for your debug build,
//                // you can speed up your build by disabling mapping file uploading.
//                mappingFileUploadEnabled false
//            }
//        }
//        debug {
//            minifyEnabled true
//            firebaseCrashlytics {
//                mappingFileUploadEnabled false
//            }
//        }
//        debug {
//            minifyEnabled true
//            firebaseCrashlytics {
//                // If you don't need crash reporting for your debug build,
//                // you can speed up your build by disabling mapping file uploading.
//                mappingFileUploadEnabled false
//            }
//        }



        release {
            // TODO: Add your own signing config for the release build.
            // Signing with the debug keys for now, so `flutter run --release` works.
//            signingConfig signingConfigs.debug
            minifyEnabled true
            signingConfig signingConfigs.release
//            firebaseCrashlytics {
//                nativeSymbolUploadEnabled true
//            }
            firebaseCrashlytics {
                mappingFileUploadEnabled false
            }


        }
    }

    dependencies {
        // Import the BoM for the Firebase platform
        implementation platform('com.google.firebase:firebase-bom:28.2.1')

        // Declare the dependencies for the   and Analytics libraries
        // When using the BoM, you don't specify versions in Firebase library dependencies
        implementation 'com.google.firebase:firebase-crashlytics:18.1.0'

        implementation 'com.google.firebase:firebase-analytics:19.0.0'

        def multidex_version = "2.0.1"
        implementation "androidx.multidex:multidex:$multidex_version"
        implementation 'com.android.support:multidex:1.0.3'

    }


}

flutter {
    source '../..'
}

//// This must appear at the bottom of the file
//apply plugin: 'com.google.gms.google-services'
//apply plugin: 'com.google.firebase.crashlytics'